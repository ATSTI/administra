ALTER PROCEDURE  GERA_PARCELAS_REC( N_TITULO                         VARCHAR( 18 )
                                  , DT_EMISSAO                       DATE
                                  , COD_CLIENTE                      INTEGER )
AS
DECLARE VARIABLE I INTEGER;
DECLARE VARIABLE STATUS_VENDA CHAR(2);
DECLARE VARIABLE VLR_RESTO DOUBLE PRECISION;
DECLARE VARIABLE N_PARC INTEGER;
DECLARE VARIABLE PARC INTEGER;
DECLARE VARIABLE V_CODORIGEM INTEGER;
DECLARE VARIABLE DATA_EMISSAO DATE;
DECLARE VARIABLE DATA_VENC DATE;
DECLARE VARIABLE COD_US SMALLINT;
DECLARE VARIABLE COD_CC INTEGER;
DECLARE VARIABLE COD_CLIEN INTEGER;
DECLARE VARIABLE V_VLRTITULO DOUBLE PRECISION = 0;
DECLARE VARIABLE V_VLRRECEBIDO DOUBLE PRECISION = 0;
DECLARE VARIABLE V_DESCONTO DOUBLE PRECISION = 0;
DECLARE VARIABLE V_JUROS DOUBLE PRECISION = 0;
DECLARE VARIABLE COD_CAIXA SMALLINT;
DECLARE VARIABLE COD_FORN INTEGER;
DECLARE VARIABLE VLR_PRIM_VIA DOUBLE PRECISION = 0;
DECLARE VARIABLE COD_VEND SMALLINT;
DECLARE VARIABLE COD_CD INTEGER;
DECLARE VARIABLE COD_CCRE INTEGER;
DECLARE VARIABLE FORMA char(1);
begin
  status_venda = '5-';
  /* Pegando os dados do título lançado */
  SELECT CODRECEBIMENTO, EMISSAO, DATAVENCIMENTO, CODUSUARIO, CODALMOXARIFADO, CAIXA, CODCLIENTE,
    VALOR_PRIM_VIA, VALORRECEBIDO, DESCONTO, JUROS, PARCELAS, CODVENDEDOR, CONTADEBITO, CONTACREDITO, FORMARECEBIMENTO
    FROM RECEBIMENTO 
    where ((TITULO = :N_TITULO) AND (EMISSAO = :DT_EMISSAO) AND (CODCLIENTE = :COD_CLIENTE)) 
    INTO :V_CODORIGEM, :DATA_EMISSAO, :DATA_VENC, :COD_US, :COD_CC, :COD_CAIXA , :COD_CLIEN, 
         :V_VLRTITULO, :V_VLRRECEBIDO, :V_DESCONTO, :V_JUROS, :PARC, :COD_VEND, :COD_CD, :COD_CCRE, :FORMA;
   i = 1;
   N_PARC = PARC;

   status_venda = '7-';

   if (:V_VLRRECEBIDO > 0) then
   begin
     --VLR_RESTO =  ((V_VLRTITULO - V_DESCONTO + V_JUROS)- V_VLRRECEBIDO);
     VLR_RESTO =  V_VLRRECEBIDO;
     UPDATE RECEBIMENTO SET 
       VIA = 1, 
       valor_resto = :VLR_RESTO,
       STATUS = :status_venda
       WHERE CODRECEBIMENTO = :V_CODORIGEM;  
     i = 2;
     N_PARC = (PARC - 1);
   end
   else begin
     IF (N_PARC > 0) THEN
       VLR_RESTO =  ((V_VLRTITULO - V_DESCONTO + V_JUROS)- V_VLRRECEBIDO)/N_PARC;
     UPDATE RECEBIMENTO SET 
       VALOR_RESTO = :VLR_RESTO,
       VIA = 1 
       WHERE CODRECEBIMENTO = :V_CODORIGEM;
   end

   IF (N_PARC > 0) THEN
     VLR_RESTO =  ((V_VLRTITULO - V_DESCONTO + V_JUROS)- V_VLRRECEBIDO)/(N_PARC);
  
   while (i < :PARC) do
   begin
     if ((i+1) > 1) then 
     begin
       VLR_PRIM_VIA = 0;
     end
     IF (V_VLRRECEBIDO > 0) THEN
     BEGIN
       status_venda = '5-';
       INSERT INTO RECEBIMENTO 
         (TITULO, EMISSAO, CODCLIENTE, DATAVENCIMENTO, STATUS , VIA, FORMARECEBIMENTO, 
         CODALMOXARIFADO, CODVENDEDOR, CODUSUARIO
         , DATASISTEMA, VALOR_PRIM_VIA, VALOR_RESTO, VALORTITULO, PARCELAS, CAIXA, CONTADEBITO, CONTACREDITO) 
       VALUES 
         ((:N_TITULO), udf_IncMonth(:DT_EMISSAO, (:i)), :COD_CLIEN, udf_IncMonth(:DATA_VENC, (:i)),
         :status_venda, CAST((:i + 1) as CHAR(3)), :FORMA, :COD_CC, :COD_VEND, :COD_US,  
         'NOW', :VLR_PRIM_VIA, :VLR_RESTO, :V_VLRTITULO, :PARC, :COD_CAIXA, :COD_CD, :COD_CCRE);       
     END
     IF (V_VLRRECEBIDO > 0) THEN
     BEGIN
       --VLR_RESTO =  ((V_VLRTITULO - V_DESCONTO + V_JUROS)- V_VLRRECEBIDO)/(PARC-1);
       -- Coloco 0(zero) CODORIGEM pra Saber que foi Gerado por 1 venda ou Receita e não Baixa
       UPDATE RECEBIMENTO SET 
         valor_resto = :VLR_RESTO, CODORIGEM = 0, DATAVENCIMENTO = udf_IncMonth(:DATA_VENC, 1)
         , EMISSAO = udf_IncMonth(:DT_EMISSAO, 1)
         WHERE TITULO = :N_TITULO AND CODCLIENTE = :COD_CLIEN AND EMISSAO = :DT_EMISSAO AND VIA = 2;
     end
     status_venda = '5-';
     IF (V_VLRRECEBIDO = 0) THEN
     BEGIN
       INSERT INTO RECEBIMENTO 
         (TITULO, EMISSAO, CODCLIENTE, DATAVENCIMENTO, STATUS , VIA, FORMARECEBIMENTO, 
         CODALMOXARIFADO, CODVENDEDOR, CODUSUARIO
         , DATASISTEMA, VALOR_PRIM_VIA, VALOR_RESTO, VALORTITULO, PARCELAS, CAIXA, CONTADEBITO, CONTACREDITO) 
       VALUES 
         ((:N_TITULO), udf_IncMonth(:DT_EMISSAO, (:i)), :COD_CLIEN, udf_IncMonth(:DATA_VENC, (:i)),
         :status_venda, CAST((:i + 1) as CHAR(3)), :FORMA, :COD_CC, :COD_VEND, :COD_US,  
         'NOW', :VLR_PRIM_VIA, :VLR_RESTO, :V_VLRTITULO, :PARC, :COD_CAIXA, :COD_CD, :COD_CCRE);
     END
     V_VLRRECEBIDO = 0;
     i = i + 1;    
   end

end
