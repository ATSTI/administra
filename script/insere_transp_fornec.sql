CREATE OR ALTER TRIGGER INSERE_TRANSP_FORNEC FOR TRANSPORTADORA
AFTER INSERT POSITION 0
AS
  DECLARE VARIABLE CODFORNEC INTEGER;
BEGIN 
  CODFORNEC = 0;
  /*SELECT CODFORNECEDOR FROM FORNECEDOR F WHERE UDF_COLLATEBR(F.NOMEFORNECEDOR) = UDF_COLLATEBR(NEW.NOMETRANSP)
   INTO :CODFORNEC;
  IF (CODFORNEC IS NULL) THEN  
    CODFORNEC = 0;
  if (codFornec = 0) then 
  begin
    codFornec = GEN_ID(GEN_FOR, 1);
    INSERT INTO FORNECEDOR (CODFORNECEDOR, NOMEFORNECEDOR, RAZAOSOCIAL, CONTATO, 
      TIPOFIRMA, CPF, CNPJ, INSCESTADUAL, RG, SEGMENTO, REGIAO, LIMITECREDITO, 
      DATACADASTRO, CODUSUARIO, STATUS) VALUES (
      :codFornec, new.NOMETRANSP, new.NOMETRANSP, new.CONTATO, 
      1, NULL, new.CNPJ_CPF, new.INSCRICAOESTADUAL, NULL, 1, 1, NULL, CURRENT_DATE, 1, 1);
    INSERT INTO ENDERECOFORNECEDOR (CODENDERECO, CODFORNECEDOR, LOGRADOURO, BAIRRO, COMPLEMENTO, 
    CIDADE, UF, CEP, DDD, TELEFONE, TELEFONE1, TELEFONE2, FAX, E_MAIL, RAMAL, TIPOEND, DADOSADICIONAIS, 
    CD_IBGE, NUMERO) VALUES (
    GEN_ID(GEN_FOR_END, 1), :codFornec, new.END_TRANSP, new.BAIRRO, null, new.CIDADE_TRANSP, new.UF_TRANSP, 
    new.CEP, case when new.fone is not null then  UDF_COPY(new.FONE , 2,2) else null end , 
    case when new.fone is not null then  UDF_LEFT(new.FONE , 9) else null end, 
    case when new.fone is not null then  UDF_LEFT(new.FONE2 , 9) else null end, NULL, 
    case when new.fax is not null then  UDF_LEFT(new.FAX , 9) else null end, NULL, NULL, 0, NULL, null, NULL);
  end */
END